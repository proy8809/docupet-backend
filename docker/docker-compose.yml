services:
  webserver:
    container_name: ${WEBSERVER_CONTAINER_NAME:-docupet-challenge-webserver}
    image: nginx:alpine
    restart: always
    ports:
      - ${WEBSERVER_CONTAINER_PORT:-8000}:80
    volumes:
      - ${API_VOLUME:-../src}:/var/www
      - ./webserver/conf.d/:/etc/nginx/conf.d/
    networks:
      - docupet
    depends_on:
      - api
  api:
    container_name: ${API_CONTAINER_NAME:-docupet-challenge-api}
    user: ${API_USER}:${API_USER}
    build:
      context: ..
      dockerfile: docker/api/Dockerfile
      args:
        - DOCKER_USER=${API_USER:-user}
        - DOCKER_USER_UID=${API_UID:-1000}
    restart: always
    environment:
      - PHP_MEMORY_LIMIT=${PHP_MEMORY_LIMIT:-1024M}
    ports:
      - "9000:9000"
    volumes:
      - ${API_VOLUME:-../src}:/var/www
    networks:
      - docupet
    depends_on:
      - mysql
  mysql:
    container_name: ${DB_CONTAINER_NAME:-docupet-challenge-db}
    image: "mysql/mysql-server:8.0"
    restart: always
    ports:
      - "${DB_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - "mysql:/var/lib/mysql"
    networks:
      - docupet
    healthcheck:
      test:
        - CMD
        - mysqladmin
        - ping
        - "-p ${DB_PASSWORD}"
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  docupet:
    name: docupet
    external: true

volumes:
  mysql:
